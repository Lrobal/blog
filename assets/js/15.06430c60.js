(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{499:function(t,a,s){"use strict";s.r(a);var e=s(4),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"c-again"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-again"}},[t._v("#")]),t._v(" C again")]),t._v(" "),s("ul",[s("li",[s("p",[s("img",{attrs:{src:"",alt:"image-20221127001441819"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221127010652.png",alt:"image-20221127010649175"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221127013950.png",alt:"image-20221127013947397"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221127144746.png",alt:"image-20221127144745530"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221127150442.png",alt:"image-20221127150441309"}})])]),t._v(" "),s("li",[s("p",[t._v("清除输入缓冲区")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221127151034.png",alt:"image-20221127151033211"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221127151256.png",alt:"image-20221127151255607"}})])]),t._v(" "),s("li",[s("p",[t._v("取余结果的正负 和被取余数的正负有关")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221127151817.png",alt:"image-20221127151816089"}})])]),t._v(" "),s("li",[s("p",[t._v("刷题与学习思路")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221128003705.png",alt:"image-20221128003702160"}})])]),t._v(" "),s("li",[s("p",[t._v("试数")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221128141328.png",alt:"image-20221128141327295"}})])]),t._v(" "),s("li",[s("p",[t._v("浮点数与0的比较")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221128015943.png",alt:"image-20221128015940523"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221129010021.png",alt:"image-20221129010017308"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221130150450.png",alt:"image-20221130150448566"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221129014336.png",alt:"image-20221129014332981"}})])]),t._v(" "),s("li",[s("p",[t._v("正常我们所说的维度是指物理上的维度，比如长，宽，高这些用来描述现实生活中的东西，但是数据是没有维度的，数据中的维度，只是将数据进行更细致的划分而已")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221129020300.png",alt:"image-20221129020257568"}})])]),t._v(" "),s("li",[s("p",[t._v("2的32次方Bit=4G ==32位机器==")])]),t._v(" "),s("li",[s("p",[t._v("函数")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221129144632.png",alt:"image-20221129144630998"}})])]),t._v(" "),s("li",[s("p",[t._v("p本来是存储垃圾地址的，*p就是以p的内容为地址的变量，这个变量于A程序而言是垃圾值，但是对于B程序可能就是一个有用的变量，相当于你在A程序里把B程序的变量修改了，很显然这是错误的行为（感觉是这样的）")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221130013947.png",alt:"image-20221130013944862"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221130015826.png",alt:"image-20221130015823370"}})])])]),t._v(" "),s("p",[t._v("32位的操作系统，cpu有32根地址线与内存条相连接，每根线有0与1两种状态，所以总共有2的32次方的状态，即内存条有2的32bit次方=4G的大小（容量）来保存这么多种状态，而每种状态，都有32bit的大小，即指针的大小为32bit=4字节")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1 字节 = 8 Bits")])]),t._v(" "),s("li",[s("p",[t._v("1 KB = 1024 Bytes")])]),t._v(" "),s("li",[s("p",[t._v("1 MB = 1024 KB")])]),t._v(" "),s("li",[s("p",[t._v("1 GB = 1024 MB")])]),t._v(" "),s("li",[s("p",[t._v("1 kb = 1024 bytes =2^10 bytes\n1 mb = 1024 kb = 2^20 bytes\n1 gb = 1024 mb = 2^30 bytes")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221130022655.png",alt:"image-20221130022652641"}})])]),t._v(" "),s("li",[s("p",[t._v("p是int"),s("em",[t._v("类型变量，会对malloc函数返回的void")]),t._v("型指针(通用指针)自动转换为int*类型，而不需要强制类型转换，当然你要是想强制类型转换那你就强转")])]),t._v(" "),s("li",[s("p",[t._v("malloc方法参数是分配内存的总大小，强制转换表示所存储的类型，顺序或随机访问才知道每个元素的间隔")])]),t._v(" "),s("li",[s("p",[t._v("动态内存分配")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221130135300.png",alt:"image-20221130135258701"}})])]),t._v(" "),s("li",[s("p",[t._v("函数调用的内存示意")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221130142200.png",alt:"image-20221130142159053"}})])]),t._v(" "),s("li"),t._v(" "),s("li",[s("p",[t._v("不用看书啊 老师说的通俗易懂  我没有看书就光看视频就懂了 就是二进制在负数如何显示 开头不能为0 因为为0的话 就是正数 要想开头不为零只能补齐前面的数并全为1")])]),t._v(" "),s("li",[s("p",[t._v("原码 一个数的原码(原始二进制码) 1：最高位为符号位,0表示正,1表示负  2：其它数值部分就是数值本身绝对值得二进制数 3：负数的原码是在其绝对值得基础上，,最高位变1")])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221201132336.png",alt:"image-20221201132334038"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221202002230.png",alt:"image-20221202002227093"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221202005101.png",alt:"image-20221202005058293"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221202005253.png",alt:"image-20221202005250726"}})])]),t._v(" "),s("li",[s("p",[s("img",{attrs:{src:"https://gitee.com/lubao1/imgsave1/raw/master/img/20221202013541.png",alt:"image-20221202013538915"}})])]),t._v(" "),s("li",[s("h2",{attrs:{id:"typedef-vs-define"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typedef-vs-define"}},[t._v("#")]),t._v(" typedef vs #define")]),t._v(" "),s("p",[s("strong",[t._v("#define")]),t._v(" 是 C 指令，用于为各种数据类型定义别名，与 "),s("strong",[t._v("typedef")]),t._v(" 类似，但是它们有以下几点不同")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("typedef")]),t._v(" 仅限于为类型定义符号名称，"),s("strong",[t._v("#define")]),t._v(" 不仅可以为类型定义别名，也能为数值定义别名，比如您可以定义 1 为 ONE。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("typedef")]),t._v(" 是由编译器执行解释的，"),s("strong",[t._v("#define")]),t._v(" 语句是由预编译器进行处理的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("typedef 与 #define 的区别")])]),t._v(" "),s("p",[t._v("（1）#define可以使用其他类型说明符对宏类型名进行扩展，但对 typedef 所定义的类型名却不能这样做。例如：")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("INTERGE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" INTERGE n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//没问题")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" INTERGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" INTERGE n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误，不能在 INTERGE 前面添加 unsigned")]),t._v("\n")])])]),s("p",[t._v("（2） 在连续定义几个变量的时候，typedef 能够保证定义的所有变量均为同一类型，而 #define 则无法保证。例如：")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("PTR_INT "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])])]),t._v("\nPTR_INT p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//p1、p2 类型不相同，宏展开后变为int *p1, p2;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" PTR_INT\nPTR_INT p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//p1、p2 类型相同，它们都是指向 int 类型的指针。")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("简而言之，"),s("strong",[t._v("#define")]),t._v(" 只是字面上的替换，由预处理器执行，"),s("strong",[t._v("#define A B")]),t._v(" 相当于打开编辑器的替换功能，把所有的 B 替换成 A。")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);